{
    "version": "1.0.0",
    "name": "com.kandy.phonegap",
    "cordova_name": "KandyPlugin",
    "description": "Kandy PhoneGap plugin",
    "license": "Apache 2.0 License",
    "repo": "https://github.com/Kandy-IO/kandy-phonegap.git",
    "issue": "https://github.com/Kandy-IO/kandy-phonegap/issues",
    "keywords": [
        "kandy",
        "phonegap",
        "cordova",
        "plugin",
        "video",
        "call",
        "chat",
        "group",
        "presence",
        "location",
        "address book"
    ],
    "platforms": [
        "android"
    ],
    "engines": [
        {
            "name": "cordova",
            "version": ">= 3.0.0"
        }
    ],
    "englishdoc": "<!---\r\n    Licensed to the Apache Software Foundation (ASF) under one\r\n    or more contributor license agreements.  See the NOTICE file\r\n    distributed with this work for additional information\r\n    regarding copyright ownership.  The ASF licenses this file\r\n    to you under the Apache License, Version 2.0 (the\r\n    \"License\"); you may not use this file except in compliance\r\n    with the License.  You may obtain a copy of the License at\r\n\r\n      http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    Unless required by applicable law or agreed to in writing,\r\n    software distributed under the License is distributed on an\r\n    \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, either express or implied.  See the License for the\r\n    specific language governing permissions and limitations\r\n    under the License.\r\n-->\r\n\r\n# com.kandy.phonegap\r\n[**Kandy**](http://www.kandy.io/) is a full-service cloud platform that enables real-time communications for business applications. **KandyPhonegap** is a [Cordova](http://cordova.apache.org/) plugin that makes it easy to use Kandy API with Cordova/PhoneGap.\r\n\r\n**Kandy** homepage: [kandy.io](http://www.kandy.io/)\r\n## Supported Platforms\r\n- Android\r\n- IOS (coming soon)\r\n\r\n## Installation\r\nCheck out PhoneGap CLI [docs](http://docs.phonegap.com/en/3.0.0/guide_cli_index.md.html#The%20Command-line%20Interface)\r\nbefore starting out.\r\n\r\n    cordova plugin add \"path/to/plugin/directory\" --variable API_KEY=<api-key> --variable API_SECRET=<api-secret>\r\nor\r\n\r\n    cordova plugin add https://github.com/kodeplusdev/kandyphonegap.git --variable API_KEY=<api-key> --variable API_SECRET=<api-secret>\r\n## Getting Started\r\nThis plugin defines a global `Kandy` object, which provide an easy way to interact with KANDY.\r\nAlthough the object is in the global scope, it is not available until after the `deviceready` event. After the `deviceready` event, you must initialize to  config and register listeners to use Kandy plugin.\r\n\r\n```js\r\n    function onDeviceReady(){\r\n        ...\r\n        Kandy.initialize();\r\n    }\r\n```\r\nAfter you initialize the `KandyPlugin`, you can use `Kandy` with following syntax:\r\n```js\r\n    Kandy.access.login(function(s){ // successCallback function\r\n        // your code here\r\n    }, function(e){ // errorCallback function\r\n        // your code here\r\n    }, username, password);\r\n```\r\nor as a widget:\r\n```html\r\n    <kandy widget=\"call\" call-success=\"callSuccess\"></kandy>\r\n```\r\nSee [API Reference](#api-reference) for more details.\r\n## How to use example codes\r\n**Create the App**\r\n\r\nGo to the directory where you maintain your source code, and run a command such as the following:\r\n```shell\r\n    phonegap create hello com.example.hello HelloWorld\r\n```\r\nThen, copy example source codes from [`demo`](/demo) directory of this plugin to your app directory\r\n\r\n**Add android platform**\r\n\r\nRun a command such as the following:\r\n```shell\r\n    phonegap platform add android\r\n```\r\n**Add plugin**\r\n\r\nGo to your app directory and run a command such as the following:\r\n```shell\r\n    phonegap plugin add directory/to/this/plugin --variable API_KEY=<your_api_key> --variable API_SECRET=<your_api_secret>\r\n```\r\n**Build the App**\r\n\r\nRun a command such as the following:\r\n```shell\r\n    phonegap build android\r\n```\r\n## Widgets\r\nThe plugin provides several widgets that you can easily use Kandy.\r\n### Provisioning widget\r\nThe `widget` attribute is `provisioning`. Some callback actions you can use: `request`, `validate`, `deactivate`\r\n\r\nExample:\r\n```html\r\n    <kandy widget=\"provisioning\" request-success=\"onRequestSuccess\" request-error=\"onRequestError\"></kandy>\r\n```\r\n### Access widget\r\nThe `widget` attribute is `access`. Some callback actions you can use: `login`, `logout`\r\n\r\nExample:\r\n```html\r\n    <kandy widget=\"access\" login-success=\"onLoginSuccess\"></kandy>\r\n```\r\n### Call widget\r\nThe `widget` attribute is `call`. The callback actions you can use: `call`.\r\nDefault call widget type is `voip`. If you want to use `PSTN`, you can add `type=\"PSTN\"`. Other widget-specific attributes: `type`, `call-to`, `label`, and `start-with-video`.\r\n\r\nExample:\r\n```html\r\n    <kandy widget=\"call\"></kandy>\r\n```\r\n```html\r\n    <kandy widget=\"call\" type=\"PSTN\" call-to=\"0123456789\" label=\"Call Us\"></kandy>\r\n```\r\n### Chat widget\r\nThe `widget` attribute is `chat`. Some callback actions you can use: `send`, `pull`.\r\nDefault chat wisget type is `chat`. If you want to use `SMS`, you can add `type=\"SMS\"`. Other widget-specific attributes: `type` and `send-to`.\r\n\r\nExample\r\n```html\r\n    <kandy widget=\"chat\" send-success=\"onSendSuccess\"></kandy>\r\n```\r\n```html\r\n    <kandy widget=\"chat\" type=\"sms\" send-to=\"0123456789\"></kandy>\r\n```\r\n## API Reference\r\n### Configurations\r\n**initialize**()\r\n\r\nInitialize the `KandyPlugin` with default configuration values.\r\n\r\n**onConnectionStateChanged**(*state*)\r\n\r\nCalled when the connection state is changed.\r\n- `state` (string) - The The KandyConnectionState value.\r\n\r\n**onSocketConnected**()\r\n\r\nCalled when the socket is connected.\r\n\r\n**onSocketConnecting**()\r\n\r\nCalled when the socket is connecting.\r\n\r\n**onSocketDisconnected**()\r\n\r\nCalled when the socket is disconnected.\r\n\r\n**onSocketFailedWithError**(*error*)\r\n\r\nCalled when the the socket connection is failed.\r\n- `error` (string) - The error string value.\r\n \r\n**onInvalidUser**(*error*)\r\n\r\nCalled when the user is invalid.\r\n- `error` (string) - The error string value.\r\n\r\n**onSessionExpired**(*error*)\r\n\r\nCalled when the session is expired.\r\n- `error` (string) - The error string value.\r\n\r\n**onSDKNotSupported**(*error*)\r\n\r\nCalled when the current SDK is not supported.\r\n- `error` (string) - The error string value.\r\n\r\n**onIncomingCall**(*args*)\r\n\r\nCalled when a call is coming. The `args` parameter is an object with the following properties:\r\n- `id` (string) - The ID of the call.\r\n- `uri` (string) - The uri of caller (Ex. *callee@domain.com*).\r\n- `via` (string) - Where the call make from.\r\n\r\n**onMissedCall**(*args*)\r\n\r\nCalled when there is a missed call. The `args` paremeter is an object with the following properties:\r\n- `uuid` (string) - The UUID of the call.\r\n- `uri` (string) - The uri of caller (Ex. *callee@domain.com*).\r\n- `via` (string) - Where the call make from.\r\n- `timestamp` (long) - When the call was missed. \r\n\r\n**onVideoStateChanged**(*args*)\r\n\r\nCalled when the video of the call change states. The `args` parameter is an object with the following properties:\r\n- `id` (string) - The ID of the call.\r\n- `uri` (string) - The uri of caller (Ex. *callee@domain.com*).\r\n- `via` (string) - Where the call make from.\r\n- `receiving` (boolean) - Determines whether or it is receiving video.\r\n- `sending` (boolean) - Determines whether or not it is sending video.\r\n\r\n**onAudioStateChanged**(*args*)\r\n\r\nCalled when the audio of the call change states. The `args` parameter is an object with the following properties:\r\n- `id` (string) - The ID of the call.\r\n- `uri` (string) - The uri of caller (Ex. *callee@domain.com*).\r\n- `via` (string) - Where the call make from.\r\n- `state` (boolean) - Determines whether or not the audio is muted.\r\n \r\n**onCallStateChanged**(*args*)\r\n\r\nCalled when the call change states. The `args` parameter is an object with the following properties:\r\n- `id` (string) - The ID of the call.\r\n- `uri` (string) - The uri of caller (Ex. *callee@domain.com*).\r\n- `via` (string) - Where the call make from.\r\n- `state` (string) - The name of current call state (holding, terminated, ...).\r\n\r\n**onGSMCallIncoming**(*args*)\r\n\r\nCalled when a GSM call is in coming. The `args` parameter is an object with the following properties:\r\n- `id` (string) - The ID of the call.\r\n- `uri` (string) - The uri of caller (Ex. *callee@domain.com*).\r\n- `via` (string) - Where the call make from.\r\n\r\n**onGSMCallConnected**(*args*)\r\n\r\nCalled when a GSM call is in connected. The `args` parameter is an object with the following properties:\r\n- `id` (string) - The ID of the call.\r\n- `uri` (string) - The uri of caller (Ex. *callee@domain.com*).\r\n- `via` (string) - Where the call make from.\r\n\r\n**onGSMCallDisconnected**(*args*)\r\n\r\nCalled when a GSM call is in disconnected. The `args` parameter is an object with the following properties:\r\n- `id` (string) - The ID of the call.\r\n- `uri` (string) - The uri of caller (Ex. *callee@domain.com*).\r\n- `via` (string) - Where the call make from.\r\n\r\n**onChatReceived**(*args*)\r\n\r\nCalled when there is a comming message. The `args` parameter is an object with the following properties:\r\n- `type` (string) - The type of the message.\r\n- `message` (object) The object message with `chat` type, sent to the user by another user. Here's an example:\r\n```json\r\n    {\r\n        \"UUID\":\"46242C4A-D47A-4098-8DE1-19A5482D1F0F\",\r\n        \"messageType\":\"chat\",\r\n        \"timestamp\":1419979765811,\r\n        \"sender\": \"user2@joecool.com\",\r\n        \"contentType\":\"text\",\r\n        \"message\":{\r\n            \"mimeType\":\"text/plain\",\r\n            \"text\":\"hello world\"\r\n        }\r\n    },\r\n```\r\n**onChatDelivered**(*ack*)\r\n\r\nCalled when a message the user sent was received by the recipient's application. The `ack` parameter is an object message with `chatRemoteAck` type. Here's an example of a message:\r\n```json\r\n    {\r\n        \"UUID\": \"4D9D8213-AD6A-4F6D-B0D2-AE02BB95C06B\",\r\n        \"timestamp\": 1412201946514\r\n    }\r\n```\r\n**onChatMediaAutoDownloadProgress**(*args*)\r\n\r\nCalled when a chat media is in downloading state. The `args` parameter is an object with the following properties:\r\n- `message` (object) - The message object.\r\n- `process` (integer) - The current process value.\r\n- `state` (string) - The current process state.\r\n- `byteTransfer` (long) - The bye transfer value.\r\n- `byteExpected` (long) - The byte expected value.\r\n\r\n**onChatMediaAutoDownloadFailed**(*args*)\r\n\r\nCalled when a chat media download failed. The `args` parameter is an object with the following properties:\r\n- `message` (object) - The message object.\r\n- `error` (string) - The error string.\r\n- `code` (int) - The error code.\r\n\r\n**onChatMediaAutoDownloadSucceded**(*args*)\r\n\r\nCalled when a chat media download successful. The `args` parameter is an object with the following properties:\r\n- `message` (object) - The message obect.\r\n- `uri` (string) - The uri of the media file.\r\n\r\n**onDeviceAddressBookChanged**()\r\n\r\nIn order to receive local address book related events.\r\n\r\n**onGroupDestroyed**(*args*)\r\n\r\nCalled when there is a group destroyed. The `args` parameter is an object with the following properties:\r\n- `id` (string) - The uri of the group.\r\n- `uuid` (string) - The UUID of the group.\r\n- `timestamp` (long) - The timestamp when the group was destroyed.\r\n- `eraser` (string) - The uri of the eraser user.\r\n\r\n**onGroupUpdated**(*args*)\r\n\r\nCalled when there is a group updated. The `args` parameter is an object with the following properties:\r\n- `id` (string) - The uri of the group.\r\n- `uuid` (string) - The UUID of the group.\r\n- `timestamp` (long) - The timestamp when the group was destroyed.\r\n- `groupParams` (object) - The params of the group (`name`, `image`).\r\n\r\n**onParticipantJoined**(*args*)\r\n\r\nCalled when there is a participant joined. The `args` parameter is an object with the following properties:\r\n- `uuid` (string) - The UUID of the group.\r\n- `groupId` (object) - The group object (`uri`, `type`, `domain`, `username`).\r\n- `inviter` (object) - The inviter (`uri`, `type`, `domain`, `username`).\r\n- `timestamp` (long) - The timestamp when the participant joined.\r\n- `invitees` (array) - The invitees array (`uri`, `type`, `domain`, `username`);\r\n\r\n**onParticipantKicked**(*args*)\r\n\r\nCalled when there is a participant kicked. The `args` parameter is an object with the following properties:\r\n- `uuid` (string) - The UUID of the group.\r\n- `groupId` (object) - The group object (`uri`, `type`, `domain`, `username`).\r\n- `booter` (object) - The booter (`uri`, `type`, `domain`, `username`).\r\n- `timestamp` (long) - The timestamp when the participant joined.\r\n- `booted` (array) - The invitees array (`uri`, `type`, `domain`, `username`);\r\n\r\n**onParticipantLeft**(*args*)\r\n\r\nCalled when there is a participant left. The `args` parameter is an object with the following properties:\r\n- `uuid` (string) - The UUID of the group.\r\n- `groupId` (object) - The group object (`uri`, `type`, `domain`, `username`).\r\n- `leaver` (object) - The leaver (`uri`, `type`, `domain`, `username`).\r\n- `timestamp` (long) - The timestamp when the participant joined.\r\n\r\n### Provisioning (namespace `provisioning`)\r\n**requestCode**(*successCallback*, *errorCallback*, *numberPhone*, *twoLetterCountryCode*)\r\n\r\nRequest code for verification and registration process.\r\n- `successCallback` (function) - Called when the request was successful. The function has no parameter.\r\n- `errorCallback` (function) - Called when the request was failed. Parameters: `error` (string).\r\n- `numberPhone` (string) - The user's phone number.\r\n- `twoLetterCountryCode` (string) - The two letter the country code. To retrieve the two letter country code, you can use location service `location.getCountryInfo()`.\r\n\r\n**validate**(*successCallback*, *errorCallback*, *numberPhone*, *otpCode*, *twoLetterCountryCode*)\r\n\r\nValidation of the signed up phone number send received code to the server.\r\n- `successCallback` (function) - Called when the request was successful. Parameters: `response` (object).\r\n- `errorCallback` (function) - Called when the request was failed. Parameters: `error` (string).\r\n- `numberPhone` (string) - The user's phone number.\r\n- `twoLetterCountryCode` (string) - The two letter the country code. To retrieve the two letter country code, you can use location service `location.getCountryInfo()`.\r\n- `otpCode` (string) - The OTP code received.\r\n\r\n**deactivate**(*successCallback*, *errorCallback*)\r\n\r\nSigning off the registered account(phone number) from a Kandy.\r\n- `successCallback` (function) - Called when the request was successful. The function has no parameter.\r\n- `errorCallback` (function) - Called when the request was failed. Parameters: `error` (string).\r\n\r\n### Access (namespace `access`)\r\n**login**(*successCallback*, *errorCallback*, *username*, *password*)\r\n\r\nRegister/login the user on the server with credentials received from admin.\r\n- `successCallback` (function) - Called when the request was successful. The function has no parameter.\r\n- `errorCallback` (function) - Called when the request was failed. Parameters: `error` (string).\r\n- `username` (string) - The user's username.\r\n- `password` (string) - The user's password\r\n\r\n**logout**(*successCallback*, *errorCallback*)\r\n\r\nThis method unregisters user from the Kandy server.\r\n- `successCallback` (function) - Called when the request was successful. The function has no parameter.\r\n- `errorCallback` (function) - Called when the request was failed. Parameters: `error` (string).\r\n\r\n**getConnectionState**(*successCallback*)\r\n\r\nGet the current connect state\r\n- `successCallback` (function) - Called when the request was successful. Parameters: `state` (string).\r\n\r\n**getSession**(*successCallback*, *errorCallback*)\r\n\r\nGet the current session.\r\n- `successCallback` (function) - Called when the request was successful. Parameter is an object with the properties: `domain` (object), `user` (object).\r\n- `errorCallback` (function) - Called when the request was failed. Parameters: `error` (string).\r\n\r\n### Call (namespace `call`)\r\n**createVoipCall**(*successCallback*, *errorCallback*, *user*, *startWithVideo*)\r\n\r\nCreate a voip call.\r\n- `successCallback` (function) - Called when the request was successful. The function has no parameter.\r\n- `errorCallback` (function) - Called when the request was failed. Parameters: `error` (string).\r\n- `user` (string) - The callee username.\r\n- `startWithVideo` (boolean) - Create a call with video enabled.\r\n\r\n**createPSTNCall**(*successCallback*, *errorCallback*, *phoneNumber*)\r\n\r\nCreate a PSTN call\r\n- `successCallback` (function) - Called when the request was successful. The function has no parameter.\r\n- `errorCallback` (function) - Called when the request was failed. Parameters: `error` (string).\r\n- `phonNumber` (string) - The callee number.\r\n\r\n**hangup**(*successCallback*, *errorCallback*)\r\n\r\nHangup current call.\r\n- `successCallback` (function) - Called when the request was successful. The function has no parameter.\r\n- `errorCallback` (function) - Called when the request was failed. Parameters: `error` (string).\r\n\r\n**mute**(*successCallback*, *errorCallback*)\r\n\r\nMute current call.\r\n- `successCallback` (function) - Called when the request was successful. The function has no parameter.\r\n- `errorCallback` (function) - Called when the request was failed. Parameters: `error` (string).\r\n\r\n**unmute**(*successCallback*, *errorCallback*)\r\n\r\nUnmute current call.\r\n- `successCallback` (function) - Called when the request was successful. The function has no parameter.\r\n- `errorCallback` (function) - Called when the request was failed. Parameters: `error` (string).\r\n\r\n**hold**(*successCallback*, *errorCallback*)\r\n\r\nHold currnet call.\r\n- `successCallback` (function) - Called when the request was successful. The function has no parameter.\r\n- `errorCallback` (function) - Called when the request was failed. Parameters: `error` (string).\r\n\r\n**unhold**(*successCallback*, *errorCallback*)\r\n\r\nUnhold current call.\r\n- `successCallback` (function) - Called when the request was successful. The function has no parameter.\r\n- `errorCallback` (function) - Called when the request was failed. Parameters: `error` (string).\r\n\r\n**enableVideo**(*successCallback*, *errorCallback*)\r\n\r\nEnable sharing video for current call.\r\n- `successCallback` (function) - Called when the request was successful. The function has no parameter.\r\n- `errorCallback` (function) - Called when the request was failed. Parameters: `error` (string).\r\n\r\n**disableVideo**(*successCallback*, *errorCallback*)\r\n\r\nDisable sharing video for current call.\r\n- `successCallback` (function) - Called when the request was successful. The function has no parameter.\r\n- `errorCallback` (function) - Called when the request was failed. Parameters: `error` (string).\r\n\r\n**accept**(*successCallback*, *errorCallback*)\r\n\r\nAccept current coming call.\r\n- `successCallback` (function) - Called when the request was successful. The function has no parameter.\r\n- `errorCallback` (function) - Called when the request was failed. Parameters: `error` (string).\r\n\r\n**reject**(*successCallback*, *errorCallback*)\r\n\r\nReject current coming call.\r\n- `successCallback` (function) - Called when the request was successful. The function has no parameter.\r\n- `errorCallback` (function) - Called when the request was failed. Parameters: `error` (string).\r\n\r\n**ignore**(*successCallback*, *errorCallback*)\r\n\r\nIgnore current coming call.\r\n- `successCallback` (function) - Called when the request was successful. The function has no parameter.\r\n- `errorCallback` (function) - Called when the request was failed. Parameters: `error` (string).\r\n\r\n### Chat (namespace `chat`)\r\n**sendChat**(*successCallback*, *errorCallback*, *recipient*, *message*)\r\n\r\nSend the message to recipient.\r\n- `successCallback` (function) - Called when the request was successful. The function has no parameter.\r\n- `errorCallback` (function) - Called when the request was failed. Parameters: `error` (string).\r\n- `recipient` (string) - The recipient to receive the message.\r\n- `message` (string) - The message to send.\r\n\r\n**sendSMS**(*successCallback*, *errorCallback*, *recipient*, *message*)\r\n\r\nSend the SMS to recipient.\r\n- `successCallback` (function) - Called when the request was successful. The function has no parameter.\r\n- `errorCallback` (function) - Called when the request was failed. Parameters: `error` (string).\r\n- `recipient` (string) - The recipient to receive the message.\r\n- `message` (string) - The message to send.\r\n\r\n**pickAudio**(*successCallback*, *errorCallback*)\r\n\r\nPick a audio file.\r\n- `successCallback` (function) - Called when the request was successful. Parameters: `uri` (string).\r\n- `errorCallback` (function) - Called when the request was failed. Parameters: `error` (string).\r\n\r\n**sendAudio**(*successCallback*, *errorCallback*, *recipient*, *caption*, *uri*)\r\n\r\nSend a audio file to recipient.\r\n- `successCallback` (function) - Called when the request was successful. The function has no parameter.\r\n- `errorCallback` (function) - Called when the request was failed. Parameters: `error` (string).\r\n- `recipient` (string) - The recipient to receive the message.\r\n- `caption` (string) - The caption of the file.\r\n- `uri` (string) - The uri of the audio file.\r\n\r\n**pickVideo**(*successCallback*, *errorCallback*)\r\n\r\nPick a video file.\r\n- `successCallback` (function) - Called when the request was successful. Parameters: `uri` (string).\r\n- `errorCallback` (function) - Called when the request was failed. Parameters: `error` (string).\r\n\r\n**sendVideo**(*successCallback*, *errorCallback*, *recipient*, *caption*, *uri*)\r\n\r\nSend a video file to recipient.\r\n- `successCallback` (function) - Called when the request was successful. The function has no parameter.\r\n- `errorCallback` (function) - Called when the request was failed. Parameters: `error` (string).\r\n- `recipient` (string) - The recipient to receive the message.\r\n- `caption` (string) - The caption of the file.\r\n- `uri` (string) - The uri of the video file.\r\n\r\n**pickImage**(*successCallback*, *errorCallback*)\r\n\r\nPick a image file.\r\n- `successCallback` (function) - Called when the request was successful. Parameters: `uri` (string).\r\n- `errorCallback` (function) - Called when the request was failed. Parameters: `error` (string).\r\n\r\n**sendImage**(*successCallback*, *errorCallback*, *recipient*, *caption*, *uri*)\r\n\r\nSend a image file to recipient.\r\n- `successCallback` (function) - Called when the request was successful. The function has no parameter.\r\n- `errorCallback` (function) - Called when the request was failed. Parameters: `error` (string).\r\n- `recipient` (string) - The recipient to receive the message.\r\n- `caption` (string) - The caption of the file.\r\n- `uri` (string) - The uri of the image file.\r\n\r\n**pickContact**(*successCallback*, *errorCallback*)\r\n\r\nPick a contact.\r\n- `successCallback` (function) - Called when the request was successful. Parameters: `uri` (string).\r\n- `errorCallback` (function) - Called when the request was failed. Parameters: `error` (string).\r\n\r\n**sendContact**(*successCallback*, *errorCallback*, *recipient*, *caption*, *uri*)\r\n\r\nSend a contact file to recipient.\r\n- `successCallback` (function) - Called when the request was successful. The function has no parameter.\r\n- `errorCallback` (function) - Called when the request was failed. Parameters: `error` (string).\r\n- `recipient` (string) - The recipient to receive the message.\r\n- `caption` (string) - The caption of the file.\r\n- `uri` (string) - The uri of the contact file.\r\n\r\n**pickFile**(*successCallback*, *errorCallback*)\r\n\r\nPick a file.\r\n- `successCallback` (function) - Called when the request was successful. Parameters: `uri` (string).\r\n- `errorCallback` (function) - Called when the request was failed. Parameters: `error` (string).\r\n\r\n**sendFile**(*successCallback*, *errorCallback*, *recipient*, *caption*, *uri*)\r\n\r\nSend a file to recipient.\r\n- `successCallback` (function) - Called when the request was successful. The function has no parameter.\r\n- `errorCallback` (function) - Called when the request was failed. Parameters: `error` (string).\r\n- `recipient` (string) - The recipient to receive the message.\r\n- `caption` (string) - The caption of the file.\r\n- `uri` (string) - The uri of the file.\r\n\r\n**sendCurrentLocation**(*successCallback*, *errorCallback*, *recipient*, *caption*)\r\n\r\nSend the current location info to the recipient.\r\n- `successCallback` (function) - Called when the request was successful. The function has no parameter.\r\n- `errorCallback` (function) - Called when the request was failed. Parameters: `error` (string).\r\n- `recipient` (string) - The recipient to receive the message.\r\n- `caption` (string) - The caption of the current location.\r\n\r\n**sendLocation**(*successCallback*, *errorCallback*, *recipient*, *caption*, *location*)\r\n\r\nSend the current location info to the recipient.\r\n- `successCallback` (function) - Called when the request was successful. The function has no parameter.\r\n- `errorCallback` (function) - Called when the request was failed. Parameters: `error` (string).\r\n- `recipient` (string) - The recipient to receive the message.\r\n- `caption` (string) - The caption of the current location.\r\n- `location` (object) - The location info to send.\r\n\r\n**sendAttachment**(*successCallback*, *errorCallback*, *recipient*, *caption*)\r\n\r\nOpen a chooser dialog and send the attachment to the recipient.\r\n- `successCallback` (function) - Called when the request was successful. The function has no parameter.\r\n- `errorCallback` (function) - Called when the request was failed. Parameters: `error` (string).\r\n- `recipient` (string) - The recipient to receive the message.\r\n- `caption` (string) - The caption of the current location.\r\n\r\n**openAttachment**(*successCallback*, *errorCallback*, *uri*, *mimeType*)\r\n\r\nOpen the attachment by URI and mimeType.\r\n- `successCallback` (function) - Called when the request was successful. The function has no parameter.\r\n- `errorCallback` (function) - Called when the request was failed. Parameters: `error` (string).\r\n- `uri` (string) - The uri of the file.\r\n- `mimeType` (string) - The mimeType of the file.\r\n\r\n**cancelMediaTransfer**(*successCallback*, *errorCallback*, *uuid*)\r\n\r\nCancel the current media transfer of the attachment.\r\n- `successCallback` (function) - Called when the request was successful. The function has no parameter.\r\n- `errorCallback` (function) - Called when the request was failed. Parameters: `error` (string).\r\n- `uuid` (string) - The UUID of the message.\r\n\r\n**downloadMedia**(*successCallback*, *errorCallback*, *uuid*)\r\n\r\nDownload the media file of the message.\r\n- `successCallback` (function) - Called when the request was successful. The function has no parameter.\r\n- `errorCallback` (function) - Called when the request was failed. Parameters: `error` (string).\r\n- `uuid` (string) - The UUID of the message.\r\n\r\n**downloadMediaThumbnail**(*successCallback*, *errorCallback*, *uuid*, *thumbnailSize*)\r\n\r\nDownload the media thumbnail file of the attachment.\r\n- `successCallback` (function) - Called when the request was successful. The function has no parameter.\r\n- `errorCallback` (function) - Called when the request was failed. Parameters: `error` (string).\r\n- `uuid` (string) - The UUID of the message.\r\n- `thumbnailSize` (string) - The KandyThumbnailSize value.\r\n\r\n**markAsReceived**(*successCallback*, *errorCallback*, *uuid*)\r\n\r\nSend ack to sever for UUID of received/handled message.\r\n- `successCallback` (function) - Called when the request was successful. The function has no parameter.\r\n- `errorCallback` (function) - Called when the request was failed. Parameters: `error` (string).\r\n- `uuid` (string) - The uuid of the message to mark.\r\n\r\n**pullEvents**(*successCallback*, *errorCallback*)\r\n\r\nPull pending events from Kandy service.\r\n- `successCallback` (function) - Called when the request was successful. The function has no parameter.\r\n- `errorCallback` (function) - Called when the request was failed. Parameters: `error` (string).\r\n\r\n### Group (namespace `group`)\r\n**createGroup**(*successCallback*, *errorCallback*, *name*)\r\n\r\nCreate a new group.\r\n- `successCallback` (function) - Called when the request was successful. Parameters: `group` (object).\r\n- `errorCallback` (function) - Called when the request was failed. Parameters: `error` (string).\r\n- `name` (string) - The group name to create.\r\n \r\n**getMyGroups**(*successCallback*, *errorCallback*)\r\n\r\nGet the group list of the user.\r\n- `successCallback` (function) - Called when the request was successful. Parameters: `groupList` (object array).\r\n- `errorCallback` (function) - Called when the request was failed. Parameters: `error` (string).\r\n\r\n**getGroupById**(*successCallback*, *errorCallback*, *id*)\r\n\r\nGet the group detail by group id.\r\n- `successCallback` (function) - Called when the request was successful. Parameters: `group` (object).\r\n- `errorCallback` (function) - Called when the request was failed. Parameters: `error` (string).\r\n- `id` (string) - The id of the group.\r\n\r\n**updateGroupName**(*successCallback*, *errorCallback*, *id*, *newName*)\r\n\r\nUpdate the group name.\r\n- `successCallback` (function) - Called when the request was successful. Parameters: `group` (object).\r\n- `errorCallback` (function) - Called when the request was failed. Parameters: `error` (string).\r\n- `id` (string) - The id of the group.\r\n- `newName` (string) - The new name of the group.\r\n\r\n**updateGroupImage**(*successCallback*, *errorCallback*, *uri*)\r\n\r\nUpdate the group image.\r\n- `successCallback` (function) - Called when the request was successful. Parameters: `group` (object).\r\n- `errorCallback` (function) - Called when the request was failed. Parameters: `error` (string).\r\n- `id` (string) - The id of the group.\r\n- `uri` (string) - The uri of the image.\r\n\r\n**removeGroupImage**(*successCallback*, *errorCallback*, *id*)\r\n\r\nRemove the group image.\r\n- `successCallback` (function) - Called when the request was successful. Parameters: `group` (object).\r\n- `errorCallback` (function) - Called when the request was failed. Parameters: `error` (string).\r\n- `id` (string) - The id of the group.\r\n\r\n**downloadGroupImage**(*successCallback*, *errorCallback*, *id*)\r\n\r\nDownload the group image.\r\n- `successCallback` (function) - Called when the request was successful. Parameters: `group` (object).\r\n- `errorCallback` (function) - Called when the request was failed. Parameters: `error` (string).\r\n- `id` (string) - The id of the group.\r\n\r\n**downloadGroupImageThumbnail**(*successCallback*, *errorCallback*, *id*, *thumbnailSize*)\r\n\r\nDownload the group image thumbnail.\r\n- `successCallback` (function) - Called when the request was successful. Parameters: `group` (object).\r\n- `errorCallback` (function) - Called when the request was failed. Parameters: `error` (string).\r\n- `id` (string) - The id of the group.\r\n- `thumbnailSize` (string) - The KandyThumbnailSize value.\r\n\r\n**muteGroup**(*successCallback*, *errorCallback*, *id*)\r\n\r\nMute the group.\r\n- `successCallback` (function) - Called when the request was successful. Parameters: `group` (object).\r\n- `errorCallback` (function) - Called when the request was failed. Parameters: `error` (string).\r\n- `id` (string) - The id of the group.\r\n\r\n**unmuteGroup**(*successCallback*, *errorCallback*, *id*)\r\n\r\nUnmute the group.\r\n- `successCallback` (function) - Called when the request was successful. Parameters: `group` (object).\r\n- `errorCallback` (function) - Called when the request was failed. Parameters: `error` (string).\r\n- `id` (string) - The id of the group.\r\n\r\n**destroyGroup**(*successCallback*, *errorCallback*, *id*)\r\n\r\nDestroy the group.\r\n- `successCallback` (function) - Called when the request was successful. Parameters: `group` (object).\r\n- `errorCallback` (function) - Called when the request was failed. Parameters: `error` (string).\r\n- `id` (string) - The id of the group.\r\n\r\n**leaveGroup**(*successCallback*, *errorCallback*, *id*)\r\n\r\nLeave the group.\r\n- `successCallback` (function) - Called when the request was successful. Parameters: `group` (object).\r\n- `errorCallback` (function) - Called when the request was failed. Parameters: `error` (string).\r\n- `id` (string) - The id of the group.\r\n\r\n**removeParticipants**(*successCallback*, *errorCallback*, *id*, *participants*)\r\n\r\nRemove participants of the group.\r\n- `successCallback` (function) - Called when the request was successful. Parameters: `group` (object).\r\n- `errorCallback` (function) - Called when the request was failed. Parameters: `error` (string).\r\n- `id` (string) - The id of the group.\r\n- `participants` (array) - The uri list of the participants.\r\n\r\n**muteParticipants**(*successCallback*, *errorCallback*, *id*, *participants*)\r\n\r\nMute participants of the group.\r\n- `successCallback` (function) - Called when the request was successful. Parameters: `group` (object).\r\n- `errorCallback` (function) - Called when the request was failed. Parameters: `error` (string).\r\n- `id` (string) - The id of the group.\r\n- `participants` (array) - The uri list of the participants.\r\n\r\n**unmuteParticipants**(*successCallback*, *errorCallback*, *id*, *participants*)\r\n\r\nUnmute participants of the group.\r\n- `successCallback` (function) - Called when the request was successful. Parameters: `group` (object).\r\n- `errorCallback` (function) - Called when the request was failed. Parameters: `error` (string).\r\n- `id` (string) - The id of the group.\r\n- `participants` (array) - The uri list of the participants.\r\n\r\n**addParticipants**(*successCallback*, *errorCallback*, *id*, *participants*)\r\n\r\nAdd participants to the group.\r\n- `successCallback` (function) - Called when the request was successful. Parameters: `group` (object).\r\n- `errorCallback` (function) - Called when the request was failed. Parameters: `error` (string).\r\n- `id` (string) - The id of the group.\r\n- `participants` (array) - The uri list of the participants.\r\n\r\n### Presence (namespace `presence`)\r\n**startWatch**(*successCallback*, *errorCallback*, *userList*)\r\n\r\nRegister listener for presence's callbacks/notifications\r\n- `successCallback` (function) - Called when the request was successful. The function has no parameter.\r\n- `errorCallback` (function) - Called when the request was failed. Parameters: `error` (string).\r\n- `userList` (string array) - The list users needed to watched.\r\n\r\n### Location (namespace `location`)\r\n**getCountryInfo**(*successCallback*, *errorCallback*)\r\n\r\nGet the country info.\r\n- `successCallback` (function) - Called when the request was successful. The parameters is an object with the properties: `code`, `nameLong` and `nameShort`.\r\n- `errorCallback` (function) - Called when the request was failed. Parameters: `error` (string).\r\n\r\n**getCurrentLocation**(*successCallback*, *errorCallback*)\r\n\r\nGet the current location info.\r\n- `successCallback` (function) - Called when the request was successful. Parameters: `location`.\r\n- `errorCallback` (function) - Called when the request was failed. Parameters: `error` (string).\r\n\r\n### Push (namespace `push`)\r\n**enable**(*successCallback*, *errorCallback*)\r\n\r\nEnable the push service.\r\n- `successCallback` (function) - Called when the request was successful. The function has no parameter.\r\n- `errorCallback` (function) - Called when the request was failed. Parameters: `error` (string).\r\n\r\n**disable**(*successCallback*, *errorCallback*)\r\n\r\nDisable the push service.\r\n- `successCallback` (function) - Called when the request was successful. The function has no parameter.\r\n- `errorCallback` (function) - Called when the request was failed. Parameters: `error` (string).\r\n\r\n### Address book (namespace `addressBook`)\r\n**getDeviceContacts**(*successCallback*, *errorCallback*, *filters*)\r\n\r\nGet the local contacts of the device.\r\n- `successCallback` (function) - Called when the request was successful. Parameters: `contacts` (object)\r\n- `errorCallback` (function) - Called when the request was failed. Parameters: `error` (string).\r\n- `filter` (string) - The DeviceContactsFilter value.\r\n\r\n**getDomainContacts**(*successCallback*, *errorCallback*)\r\n\r\nGet the contacts of the domain.\r\n- `successCallback` (function) - Called when the request was successful. Parameters: `contacts` (object)\r\n- `errorCallback` (function) - Called when the request was failed. Parameters: `error` (string).\r\n\r\n**getFilteredDomainDirectoryContacts**(*successCallback*, *errorCallback*, *filter*)\r\n\r\nGet the contacts of the domain by filters.\r\n- `successCallback` (function) - Called when the request was successful. Parameters: `contacts` (object)\r\n- `errorCallback` (function) - Called when the request was failed. Parameters: `error` (string).\r\n- `filter` (string) - The DomainContactFilter value.\r\n\r\n## Troubleshooting\r\n\r\n## License\r\n"
}